---
# Source: commons-operator/templates/configmap.yaml
apiVersion: v1
data:
  {}
kind: ConfigMap
metadata:
  name: commons-operator-configmap
  labels:
    helm.sh/chart: commons-operator-23.11.0
    app.kubernetes.io/name: commons-operator
    app.kubernetes.io/instance: commons-operator
    app.kubernetes.io/version: "23.11.0"
---
# Source: commons-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: commons-operator-deployment
  labels:
    helm.sh/chart: commons-operator-23.11.0
    app.kubernetes.io/name: commons-operator
    app.kubernetes.io/instance: commons-operator
    app.kubernetes.io/version: "23.11.0"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: commons-operator
      app.kubernetes.io/instance: commons-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: commons-operator
        app.kubernetes.io/instance: commons-operator
    spec:
      serviceAccountName: commons-operator-serviceaccount
      securityContext:
        {}
      containers:
        - name: commons-operator
          securityContext:
            {}
          image: "docker.stackable.tech/stackable/commons-operator:23.11.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 1024Mi
            requests:
              cpu: 200m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /etc/stackable/commons-operator/config-spec
              name: config-spec
      volumes:
        - name: config-spec
          configMap:
            name: commons-operator-configmap
---
# Source: commons-operator/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: commons-operator-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
      - secrets
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - patch # We need to add a label to the StatefulSet
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
---
# Source: commons-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: commons-operator-serviceaccount
  labels:
    helm.sh/chart: commons-operator-23.11.0
    app.kubernetes.io/name: commons-operator
    app.kubernetes.io/instance: commons-operator
    app.kubernetes.io/version: "23.11.0"
---
# Source: commons-operator/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: commons-operator-clusterrolebinding
  labels:
    helm.sh/chart: commons-operator-23.11.0
    app.kubernetes.io/name: commons-operator
    app.kubernetes.io/instance: commons-operator
    app.kubernetes.io/version: "23.11.0"
subjects:
  - kind: ServiceAccount
    name: commons-operator-serviceaccount
    namespace: default
roleRef:
  kind: ClusterRole
  name: commons-operator-clusterrole
  apiGroup: rbac.authorization.k8s.io
